"""
This type stub file was generated by pyright.
"""

import enum
from ._impl import CANifier as CANifierImpl, CANifierFaults, CANifierStickyFaults, GeneralPin

__all__ = ["CANifier"]
class PinValues:
    """Class to hold the pin values."""
    def __init__(self):
        self.QUAD_IDX = ...
        self.QUAD_B = ...
        self.QUAD_A = ...
        self.LIMR = ...
        self.LIMF = ...
        self.SDA = ...
        self.SCL = ...
        self.SPI_CS_PWM3 = ...
        self.SPI_MISO_PWM2 = ...
        self.SPI_MOSI_PWM1 = ...
        self.SPI_CLK_PWM0 = ...
    


class CANifier(CANifierImpl):
    """CTRE CANifier
        
    Device for interfacing common devices to the CAN bus.
    """
    ControlFrame = ...
    StatusFrame = ...
    Faults = ...
    StickyFaults = ...
    class LEDChannel(enum.IntEnum):
        """Enum for the LED Output Channels"""
        A = ...
        B = ...
        C = ...
    
    
    class PWMChannel(enum.IntEnum):
        """Enum for the PWM Input Channels"""
        C0 = ...
        C1 = ...
        C2 = ...
        C3 = ...
    
    
    PWMChannelCount = ...
    GeneralPin = ...
    def __init__(self, deviceId: int) -> None:
        """
        Constructor.

        :param deviceId: The CAN Device ID of the CANifier.
        """
        ...
    
    def setLEDOutput(self, percentOutput: float, ledChannel: LEDChannel):
        """
        Sets the LED Output

        :param percentOutput: Output duty cycle expressed as percentage.
        :param ledChannel: Channel to set the output of.
        """
        ...
    
    def getGeneralInputs(self, allPins: PinValues):
        """
        Gets the state of all General Pins

        :param allPins: A structure to fill with the current state of all pins.
        """
        ...
    
    def setPWMOutput(self, pwmChannel: int, dutyCycle: float):
        """
        Sets the PWM Output
        Currently supports PWM 0, PWM 1, and PWM 2

        :param pwmChannel: Index of the PWM channel to output.
        :param dutyCycle: Duty Cycle (0 to 1) to output.  Default period of the signal is 4.2 ms.
        """
        ...
    
    def enablePWMOutput(self, pwmChannel: int, bEnable: bool):
        """
        Enables PWM Outputs
        Currently supports PWM 0, PWM 1, and PWM 2

        :param pwmChannel: Index of the PWM channel to enable.
        :param bEnable: True" enables output on the pwm channel.
        """
        ...
    
    def getFaults(self) -> CANifierFaults:
        """
        Gets the CANifier fault status
        """
        ...
    
    def getStickyFaults(self) -> CANifierStickyFaults:
        """
        Gets the CANifier sticky fault status
        """
        ...
    
    def getDeviceID(self) -> int:
        """:returns: The Device Number"""
        ...
    


