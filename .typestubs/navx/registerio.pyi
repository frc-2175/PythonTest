"""
This type stub file was generated by pyright.
"""

import logging

logger = logging.getLogger("navx")
__all__ = ["RegisterIO"]
IO_TIMEOUT_SECONDS = 1
DELAY_OVERHEAD_SECONDS = 0.004
class _BoardId:
    type = ...
    hw_rev = ...
    fw_ver_major = ...
    fw_ver_minor = ...
    fw_revision = ...
    unique_id = ...


class _BoardState:
    op_status = ...
    sensor_status = ...
    cal_status = ...
    selftest_status = ...
    capability_flags = ...
    update_rate_hz = ...
    accel_fsr_g = ...
    gyro_fsr_dps = ...


class RegisterIO:
    def __init__(self, io_provider, update_rate_hz, notify_sink, board_capabilities):
        """
            :param board_capabilities: must have the following callable attributes:
                _isOmniMountSupported, _isBoardYawResetSupported,
                _isDisplacementSupported
        
            :param notify_sink: must have the following callable attributes: 
                _setYawPitchRoll, _setAHRSData, _setAHRSPosData,
                _setRawData, _setBoardID, _setBoardState, _yawResetComplete
        """
        self.io_provider = ...
        self.update_rate_hz = ...
        self.board_capabilities = ...
        self.notify_sink = ...
        self.raw_data_update = ...
        self.ahrspos_update = ...
        self.board_state = ...
        self.board_id = ...
        self.last_update_time = ...
        self.byte_count = ...
        self.update_count = ...
        self.last_sensor_timestamp = ...
    
    def stop(self):
        ...
    
    def shutdown(self):
        ...
    
    def run(self):
        ...
    
    def getConfiguration(self):
        ...
    
    def getCurrentData(self):
        self.last_sensor_timestamp = ...
        self.last_update_time = ...
    
    def isConnected(self):
        ...
    
    def getByteCount(self):
        ...
    
    def getUpdateCount(self):
        ...
    
    def setUpdateRateHz(self, update_rate_hz):
        ...
    
    def zeroYaw(self):
        ...
    
    def zeroDisplacement(self):
        ...
    


