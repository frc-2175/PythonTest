"""
This type stub file was generated by pyright.
"""

import logging
import struct

"""
    This encompasses the WireEncoder and WireDecoder stuff in ntcore
    
    Reading:
    
    Writing:
    
        Each message type will have a write function, which takes
        a single list argument. Bytes will be added to that list.
    
        The write routines assume that the messages are a tuple
        that have the following format:
        
            # This doesn't make sense
            type, str, value, id, flags, seqnum
    
"""
logger = logging.Logger("nt.wire")
_clientHello = struct.Struct(">H")
_protoUnsup = struct.Struct(">H")
_entryAssignV2 = struct.Struct(">HH")
_entryUpdate = struct.Struct(">HH")
_serverHello = struct.Struct("b")
_entryAssignV3 = struct.Struct(">HHb")
_flagsUpdate = struct.Struct(">Hb")
_entryDelete = struct.Struct(">H")
_clearEntries = struct.Struct(">I")
_executeRpc = struct.Struct(">HH")
_rpcResponse = struct.Struct(">HH")
class WireCodec(object):
    _bool_fmt = ...
    _double_fmt = ...
    _string_fmt = ...
    _array_fmt = ...
    _short_fmt = ...
    clientHello = ...
    protoUnsup = ...
    entryUpdate = ...
    def __init__(self, proto_rev):
        self.proto_rev = ...
    
    def set_proto_rev(self, proto_rev):
        self.proto_rev = ...
    
    def _del(self, attr):
        ...
    
    def read_value(self, vtype, rstream):
        ...
    
    def write_value(self, v, out):
        ...
    
    def read_arraylen_v2_v3(self, rstream):
        ...
    
    def read_string_v2(self, rstream):
        ...
    
    def read_string_v3(self, rstream):
        ...
    
    def write_arraylen_v2_v3(self, a, out):
        ...
    
    def write_string_v2(self, s, out):
        ...
    
    def write_string_v3(self, s, out):
        ...
    


