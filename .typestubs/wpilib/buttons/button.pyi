"""
This type stub file was generated by pyright.
"""

from ..command import command
from .trigger import Trigger

"""
This type stub file was generated by pyright.
"""
__all__ = ["Button"]
class Button(Trigger):
    """This class provides an easy way to link commands to OI inputs.

    It is very easy to link a button to a command.  For instance, you could
    link the trigger button of a joystick to a "score" command.

    This class represents a subclass of :class:`.Trigger` that is specifically aimed at
    buttons on an operator interface as a common use case of the more
    generalized Trigger objects. This is a simple wrapper around Trigger with
    the method names renamed to fit the Button object use.
    """
    def whenPressed(self, command: command.Command) -> None:
        """Starts the given command whenever the button is newly pressed.

        :param command: the command to start
        """
        ...
    
    def whileHeld(self, command: command.Command) -> None:
        """Constantly starts the given command while the button is held.

        :meth:`.Command.start` will be called repeatedly while the button is
        held, and will be canceled when the button is released.

        :param command: the command to start
        """
        ...
    
    def whenReleased(self, command: command.Command) -> None:
        """Starts the command when the button is released.

        :param command: the command to start
        """
        ...
    
    def toggleWhenPressed(self, command: command.Command) -> None:
        """Toggles the command whenever the button is pressed (on then off
        then on).

        :param command:
        """
        ...
    
    def cancelWhenPressed(self, command: command.Command) -> None:
        """Cancel the command when the button is pressed.

        :param command:
        """
        ...
    


