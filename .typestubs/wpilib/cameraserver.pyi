"""
This type stub file was generated by pyright.
"""

import subprocess
import logging
from typing import Optional

"""
This type stub file was generated by pyright.
"""
logger = logging.getLogger("wpilib.cs")
__all__ = ["CameraServer"]
class CameraServer:
    """
        Provides a way to launch an out of process cscore-based camera
        service instance, for streaming or for image processing.
        
        .. note:: This does not correspond directly to the wpilib
                  CameraServer object; that can be found as
                  :class:`cscore.CameraServer`. However, you should
                  not use cscore directly from your robot code, see
                  the documentation for details             
    """
    _alive = ...
    _launched = ...
    @classmethod
    def is_alive(cls) -> bool:
        """:returns: True if the CameraServer is still alive"""
        ...
    
    @classmethod
    def launch(cls, vision_py: Optional[str] = ...) -> None:
        """
            Launches the CameraServer process in autocapture mode or
            using a user-specified python script
        
            :param vision_py: If specified, this is the relative path to
                              a filename with a function in it
                              
            Example usage::
            
                wpilib.CameraServer.launch("vision.py:main")
            
            .. warning:: You must have robotpy-cscore installed, or this
                         function will fail without returning an error
                         (you will see an error in the console).
                         
        """
        ...
    
    @classmethod
    def _monitor_child(cls, proc: subprocess.Popen) -> None:
        ...
    


