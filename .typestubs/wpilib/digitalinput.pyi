"""
This type stub file was generated by pyright.
"""

import hal
from .digitalsource import DigitalSource
from .sendablebuilder import SendableBuilder

"""
This type stub file was generated by pyright.
"""
__all__ = ["DigitalInput"]
class DigitalInput(DigitalSource):
    """Reads a digital input.
    
    This class will read digital inputs and return the current value on the
    channel. Other devices such as encoders, gear tooth sensors, etc. that
    are implemented elsewhere will automatically allocate digital inputs
    and outputs as required. This class is only for devices like switches
    etc. that aren't implemented anywhere else.
    """
    def __init__(self, channel: int) -> None:
        """Create an instance of a Digital Input class. Creates a digital
        input given a channel.

        :param channel: the DIO channel for the digital input. 0-9 are on-board, 10-25 are on the MXP
        """
        self.channel = ...
        self.handle = ...
    
    def close(self) -> None:
        self.handle = ...
    
    def get(self) -> bool:
        """Get the value from a digital input channel. Retrieve the value of
        a single digital input channel from the FPGA.

        :returns: the state of the digital input
        """
        ...
    
    def getChannel(self) -> int:
        """Get the channel of the digital input.

        :returns: The GPIO channel number that this object represents.
        """
        ...
    
    def getAnalogTriggerTypeForRouting(self) -> int:
        """Get the analog trigger type.

        :returns: false
        """
        ...
    
    def isAnalogTrigger(self) -> bool:
        """Is this an analog trigger.

        :returns: true if this is an analog trigger
        """
        ...
    
    def getPortHandleForRouting(self) -> hal.DigitalHandle:
        """Get the HAL Port Handle.

        :return: The HAL Handle to the specified source
        """
        ...
    
    def initSendable(self, builder: SendableBuilder) -> None:
        ...
    


