"""
This type stub file was generated by pyright.
"""

from .container import ShuffleboardContainer
from typing import Any, Dict, Optional

"""
This type stub file was generated by pyright.
"""
class ShuffleboardComponent:
    def __init__(self, parent: ShuffleboardContainer, title: str, type: Optional[str] = ...):
        self.parent = ...
        self.title = ...
        self.type = ...
        self.metadataDirty = ...
        self.column = ...
        self.row = ...
        self.width = ...
        self.height = ...
        self.properties = ...
    
    def getParent(self) -> ShuffleboardContainer:
        ...
    
    def setType(self, type: str) -> None:
        self.type = ...
        self.metadataDirty = ...
    
    def getType(self) -> str:
        ...
    
    def getTitle(self) -> str:
        ...
    
    def getProperties(self) -> Dict[str, Any]:
        ...
    
    def withProperties(self, properties: Dict[str, Any]) -> ShuffleboardComponent:
        """
        Sets custom properties for this component. Property names are case- 
        and whitespace-insensitive (capitalization and spaces do not matter).

        :param properties: the properties for this component

        :returns: this component
        """
        self.properties = ...
        self.metadataDirty = ...
    
    def withPosition(self, columnIndex: int, rowIndex: int) -> ShuffleboardComponent:
        """
        Sets the position of this component in the tab. This has no effect if 
        this component is inside a layout.

        If the position of a single component is set, it is recommended to set 
        the positions of *all* components inside a tab to prevent Shuffleboard 
        from automatically placing another component there before the one with 
        the specific position is sent.

        :param columnIndex: the column in the tab to place this component
        :param rowIndex:    the row in the tab to place this component
        :returns: this component
        """
        self.column = ...
        self.row = ...
        self.metadataDirty = ...
    
    def withSize(self, width: int, height: int) -> ShuffleboardComponent:
        """
        Sets the size of this component in the tab. This has no effect if this 
        component is inside a layout.

        :param width:  how many columns wide the component should be
        :param height: how many rows high the component should be
        :returns: this component
        """
        self.width = ...
        self.height = ...
        self.metadataDirty = ...
    
    def buildMetadata(self, metaTable) -> None:
        self.metadataDirty = ...
    
    def buildInto(self, parentTable, metaTable) -> None:
        """Builds the entries for this value.

        :param parentTable: the table containing all the data for the parent. Values that require a
                            complex entry or table structure should call
                            ``parentTable.getSubTable(getTitle())`` to get the table to put data into.
                            Values that only use a single entry should call
                            ``parentTable.getEntry(getTitle())`` to get that entry.

        :param metaTable: the table containing all the metadata for this value and its sub-values
        """
        ...
    


