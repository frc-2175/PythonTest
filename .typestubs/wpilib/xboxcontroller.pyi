"""
This type stub file was generated by pyright.
"""

import enum
from .interfaces.generichid import GenericHID

"""
This type stub file was generated by pyright.
"""
__all__ = ["XboxController"]
class XboxController(GenericHID):
    """
        Handle input from Xbox 360 or Xbox One controllers connected to the Driver Station.

        This class handles Xbox input that comes from the Driver Station. Each time a value is
        requested the most recent value is returned. There is a single class instance for each controller
        and the mapping of ports to hardware buttons depends on the code in the Driver Station.
     """
    class Button(enum.IntEnum):
        kBumperLeft = ...
        kBumperRight = ...
        kStickLeft = ...
        kStickRight = ...
        kA = ...
        kB = ...
        kX = ...
        kY = ...
        kBack = ...
        kStart = ...
    
    
    def __init__(self, port: int) -> None:
        """Construct an instance of an XBoxController. The XBoxController index is the USB port on the Driver Station.

        :param port: The port on the Driver Station that the joystick is plugged into
        """
        ...
    
    def getX(self, hand: GenericHID.Hand = ...) -> float:
        """Get the X axis value of the controller.

        :param hand: Side of controller whose value should be returned
        :return: The X axis value of the controller
        """
        ...
    
    def getY(self, hand: GenericHID.Hand = ...) -> float:
        """Get the Y axis value of the controller.

        :param hand: Side of controller whose value should be returned
        :return: The Y axis value of the controller
        """
        ...
    
    def getTriggerAxis(self, hand: GenericHID.Hand) -> float:
        """Get the trigger axis value of the controller.

        :param hand: Side of controller whose value should be returned
        :return: The trigger axis value of the controller
        """
        ...
    
    def getBumper(self, hand: GenericHID.Hand) -> bool:
        """Read the values of the bumper button on the controller.

        :param hand: Side of controller whose value should be returned.
        :return: The state of the button
        """
        ...
    
    def getBumperPressed(self, hand: GenericHID.Hand) -> bool:
        """Whether the bumper was pressed since the last check.

        :param hand: Side of controller whose value should be returned.
        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getBumperReleased(self, hand: GenericHID.Hand) -> bool:
        """Whether the bumper was released since the last check.

        :param hand: Side of controller whose value should be returned.
        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getStickButton(self, hand: GenericHID.Hand) -> bool:
        """Read the values of the stick button on the controller

        :param hand: Side of the controller whose value should be returned
        :return: The state of the button
        """
        ...
    
    def getStickButtonPressed(self, hand: GenericHID.Hand) -> bool:
        """Whether the stick button was pressed since the last check.

        :param hand: Side of controller whose value should be returned.
        :return: Whether the button was pressed since the last check.
        """
        ...
    
    def getStickButtonReleased(self, hand: GenericHID.Hand) -> bool:
        """Whether the stick button was released since the last check.

        :param hand: Side of controller whose value should be returned.
        :return: Whether the button was released since the last check.
        """
        ...
    
    def getAButton(self) -> bool:
        """Read the value of the A button on the controller

        :return: The state of the A button
        """
        ...
    
    def getAButtonPressed(self) -> bool:
        """Whether the A button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getAButtonReleased(self) -> bool:
        """Whether the A button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getBButton(self) -> bool:
        """Read the value of the B button on the controller

        :return: The state of the B button
        """
        ...
    
    def getBButtonPressed(self) -> bool:
        """Whether the B button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getBButtonReleased(self) -> bool:
        """Whether the B button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getXButton(self) -> bool:
        """Read the value of the X button on the controller

        :return: The state of the X button
        """
        ...
    
    def getXButtonPressed(self) -> bool:
        """Whether the X button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getXButtonReleased(self) -> bool:
        """Whether the X button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getYButton(self) -> bool:
        """Read the value of the Y button on the controller

        :return: The state of the Y button
        """
        ...
    
    def getYButtonPressed(self) -> bool:
        """Whether the Y button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getYButtonReleased(self) -> bool:
        """Whether the Y button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getBackButton(self) -> bool:
        """Read the value of the Back button on the controller

        :return: The state of the Back button
        """
        ...
    
    def getBackButtonPressed(self) -> bool:
        """Whether the Back button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getBackButtonReleased(self) -> bool:
        """Whether the Back button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    
    def getStartButton(self) -> bool:
        """Read the value of the Start button on the controller

        :return: The state of the Start button
        """
        ...
    
    def getStartButtonPressed(self) -> bool:
        """Whether the Start button was pressed since the last check.

        :returns: Whether the button was pressed since the last check.
        """
        ...
    
    def getStartButtonReleased(self) -> bool:
        """Whether the Start button was released since the last check.

        :returns: Whether the button was released since the last check.
        """
        ...
    


